{"ast":null,"code":"var _jsxFileName = \"/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Cards/SavedCharacters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport Search from \"./Components/Search/Search\";\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport { Typography, Container } from \"@mui/material\";\nimport MyToastContainer from \"../MyToastContainer\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SavedCharacters = () => {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  let [fetchedData, updateFetchedData] = useState([]);\n  let {\n    name,\n    location,\n    origin,\n    gender,\n    image,\n    status,\n    species\n  } = fetchedData;\n  const navigate = useNavigate(); // access only if logged in\n\n  useEffect(() => {\n    if (!localStorage.getItem(\"isLoggedIn\")) {\n      navigate(\"/login\", {\n        replace: true\n      });\n    }\n  }); // get saved characters from local storage\n\n  useEffect(() => {\n    let savedCharacters = localStorage.getItem(\"saveCharacters\");\n    savedCharacters = JSON.parse(savedCharacters);\n    console.log(savedCharacters);\n    updateFetchedData([...savedCharacters]);\n  }, []); // set filterCharacters state\n\n  useEffect(() => {\n    updateFetchedData([...fetchedData]);\n  }, [fetchedData]); // remove saved character\n\n  const removeCharacter = payload => {\n    var _characters;\n\n    let characters = localStorage.getItem(\"saveCharacters\");\n    characters = JSON.parse(characters);\n    const updatedCharacters = (_characters = characters) === null || _characters === void 0 ? void 0 : _characters.filter(item => item.id !== payload.id);\n    localStorage.setItem(\"saveCharacters\", JSON.stringify(updatedCharacters));\n    updateFetchedData([...JSON.parse(localStorage.getItem(\"saveCharacters\"))]);\n    toast.success(`${payload.name} removed successfully`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MyToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        marginBottom: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          textAlign: \"center\"\n        },\n        children: \"Saved Characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), fetchedData.length === 0 && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"overline\",\n        sx: {\n          fontSize: \"1.2rem\",\n          color: \"gray\"\n        },\n        children: \"You have no saved characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), \"console.log (character)\"]\n  }, void 0, true);\n};\n\n_s(SavedCharacters, \"6H/hDGBF4amUGHQOppbV2Q99ZIk=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = SavedCharacters;\nexport default SavedCharacters;\n\nvar _c;\n\n$RefreshReg$(_c, \"SavedCharacters\");","map":{"version":3,"sources":["/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Cards/SavedCharacters.js"],"names":["React","useState","useEffect","useNavigate","useParams","Search","Navbar","Typography","Container","MyToastContainer","toast","SavedCharacters","id","fetchedData","updateFetchedData","name","location","origin","gender","image","status","species","navigate","localStorage","getItem","replace","savedCharacters","JSON","parse","console","log","removeCharacter","payload","characters","updatedCharacters","filter","item","setItem","stringify","success","marginBottom","textAlign","length","fontSize","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport Search from \"./Components/Search/Search\";\nimport Navbar from \"./Components/Navbar/Navbar\"\nimport { Typography, Container } from \"@mui/material\";\nimport MyToastContainer from \"../MyToastContainer\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst SavedCharacters = () => {\n    let { id } = useParams();\n\n  let [fetchedData, updateFetchedData] = useState([]);\n  let { name, location, origin, gender, image, status, species } = fetchedData;\n\n  const navigate = useNavigate();\n\n  // access only if logged in\n  useEffect(() => {\n    if (!localStorage.getItem(\"isLoggedIn\")) {\n      navigate(\"/login\", { replace: true });\n    }\n  });\n\n  // get saved characters from local storage\n  useEffect(() => {\n    let savedCharacters = localStorage.getItem(\"saveCharacters\");\n    savedCharacters = JSON.parse(savedCharacters);\n    console.log(savedCharacters);\n    updateFetchedData([...savedCharacters]);\n  }, []);\n\n  // set filterCharacters state\n  useEffect(() => {\n    updateFetchedData([...fetchedData]);\n  }, [fetchedData]);\n\n  // remove saved character\n  const removeCharacter = (payload) => {\n    let characters = localStorage.getItem(\"saveCharacters\");\n    characters = JSON.parse(characters);\n    const updatedCharacters = characters?.filter(\n      (item) => item.id !== payload.id\n    );\n    localStorage.setItem(\"saveCharacters\", JSON.stringify(updatedCharacters));\n    updateFetchedData([...JSON.parse(localStorage.getItem(\"saveCharacters\"))]);\n    toast.success(`${payload.name} removed successfully`);\n  };\n\n  return (\n    <>\n      {<MyToastContainer />}\n      <Navbar />\n      <Search />\n      <Container sx={{ marginBottom: 1 }}>\n        <Typography variant=\"h4\" sx={{ textAlign: \"center\" }}>\n          Saved Characters\n        </Typography>\n        {fetchedData.length === 0 && (\n          <Typography\n            variant=\"overline\"\n            sx={{ fontSize: \"1.2rem\", color: \"gray\" }}>\n            You have no saved characters\n          </Typography>\n        )}\n      </Container>\n      console.log (character)\n    </>\n  );\n};\n\nexport default SavedCharacters;\n"]},"metadata":{},"sourceType":"module"}