{"ast":null,"code":"var _jsxFileName = \"/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Cards/Cards.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport CardsDetails from './CardsDetails';\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\"; //const cards vali ststement se detructuring the data we got from fetched data\n//i.e hme yahn data mil gaya ..now we will map data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cards = _ref => {\n  _s();\n\n  let {\n    page,\n    results\n  } = _ref;\n  const navigate = useNavigate();\n\n  const checkLoggedIn = () => localStorage.getItem(\"isLoggedIn\");\n\n  const handleClick = (id, name, status, species) => {\n    console.log('click');\n    console.log(name); //handleSaveCharacter(payload); // raise event\n  };\n\n  let display;\n\n  if (results) {\n    //searched char present in page\n    //x will target each of the result you can write anything there\n    display = results.map(x => {\n      let {\n        id,\n        name,\n        image,\n        location,\n        status,\n        gender,\n        species\n      } = x;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            color: \"black\",\n            maxWidth: 345,\n            boxShadow: \"0 5px 8px 0 rgba(0, 0, 0, 0.3)\",\n            border: \"2px solid #0b5ed7\",\n            // borderColor: \"#0b5ed7\",\n            //  borderRadius: \"10px\",\n            paddingBottom: \"10px\",\n            marginTop: 20,\n            backgroundColor: \"#fafafa\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            style: {\n              height: \"150px\",\n              width: \"150\",\n              borderRadius: \"10px 10px 0 0\",\n              position: \"center\"\n            },\n            image: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(BookmarkIcon, {\n              onClick: () => {\n                handleClick({\n                  id\n                }, {\n                  name\n                }, {\n                  status\n                }, {\n                  species\n                });\n              },\n              style: {\n                color: \"black\",\n                position: \"right\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              color: \"primary\",\n              variant: \"h5\",\n              color: \"black primary\",\n              type: \"bold\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"subtitle1\",\n              children: status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"inherit\",\n              children: gender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"subtitle2\",\n              children: species\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n    });\n  } else {\n    //not present\n    display = \"No Characters Found :/\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: display\n  }, void 0, false);\n};\n\n_s(Cards, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Cards;\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Cards/Cards.js"],"names":["React","Card","CardContent","CardMedia","Typography","BookmarkIcon","CardsDetails","Link","useNavigate","Cards","page","results","navigate","checkLoggedIn","localStorage","getItem","handleClick","id","name","status","species","console","log","display","map","x","image","location","gender","color","maxWidth","boxShadow","border","paddingBottom","marginTop","backgroundColor","height","width","borderRadius","position"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport CardsDetails from './CardsDetails' ;\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\n\n\n\n//const cards vali ststement se detructuring the data we got from fetched data\n//i.e hme yahn data mil gaya ..now we will map data\nconst Cards = ({page, results }) => {\n  \n  const navigate = useNavigate();\n  const checkLoggedIn = () => localStorage.getItem(\"isLoggedIn\");\n\n  const handleClick = (id,name,status,species) => {\n    console.log('click');\n    console.log(name);\n    //handleSaveCharacter(payload); // raise event\n   \n\n  };\n\n  \n  let display;\n  if (results) {\n    //searched char present in page\n    //x will target each of the result you can write anything there\n    display = results.map((x) => {\n      let { id, name, image, location, status ,gender,species} = x;\n      return (\n\n        <div key={id} className=\"col-4\">\n          <Card\n            style={{\n              color : \"black\" ,\n              maxWidth: 345,\n              boxShadow: \"0 5px 8px 0 rgba(0, 0, 0, 0.3)\",\n              border: \"2px solid #0b5ed7\",\n              // borderColor: \"#0b5ed7\",\n              //  borderRadius: \"10px\",\n              paddingBottom: \"10px\",\n              marginTop: 20,\n              backgroundColor: \"#fafafa\"\n            }}\n          >\n            <CardMedia\n              style={{\n                height: \"150px\",\n                width: \"150\",\n                borderRadius: \"10px 10px 0 0\" ,\n                position: \"center\"\n\n              }}\n              image={image}\n            />\n\n\n            <div >\n          <BookmarkIcon \n          onClick={() => { handleClick({id},{name},{status},{species})}}\n          style={{\n            color :\"black\" ,\n            position: \"right\"\n          }}\n          />\n         </div>\n            <CardContent>\n              <Typography color=\"primary\" variant=\"h5\" color= \"black primary\" type =\"bold\">\n                {name}\n              </Typography>\n              <Typography color=\"textSecondary\" variant=\"subtitle1\">\n                {status}\n              </Typography>\n              <Typography color=\"textSecondary\" variant=\"inherit\">\n                {gender}\n              </Typography>\n              <Typography color=\"textSecondary\" variant=\"subtitle2\">\n                {species}\n              </Typography>\n            </CardContent>\n          </Card>\n          \n        </div>\n      \n      );\n    });\n  } else {\n    //not present\n    display = \"No Characters Found :/\";\n  }\n\n  return <>{display}</>;\n};\n\nexport default Cards;\n"]},"metadata":{},"sourceType":"module"}