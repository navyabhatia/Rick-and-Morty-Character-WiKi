{"ast":null,"code":"const loginUser = async userPayload => {\n  try {\n    var _allUsers;\n\n    if (!localStorage.getItem(\"users\")) {\n      throw new Error(\"User not found\");\n    } // check user in database\n\n\n    let allUsers = localStorage.getItem(\"users\");\n    allUsers = JSON.parse(allUsers);\n    const user = (_allUsers = allUsers) === null || _allUsers === void 0 ? void 0 : _allUsers.find(user => user.email === userPayload.email);\n\n    if (!user) {\n      throw new Error(\"User not found\");\n    } else {\n      if (user.password !== userPayload.password) {\n        throw new Error(\"Invalid credentials\");\n      } else {\n        return {\n          success: true,\n          message: \"User found\",\n          data: user\n        };\n      }\n    }\n  } catch (err) {\n    return {\n      success: false,\n      msg: `${err.message}`\n    };\n  }\n};\n\nexport default loginUser;","map":{"version":3,"sources":["/Users/navyabhatia/Downloads/rick-and-marty-main/src/API/LoginUser.js"],"names":["loginUser","userPayload","localStorage","getItem","Error","allUsers","JSON","parse","user","find","email","password","success","message","data","err","msg"],"mappings":"AAAA,MAAMA,SAAS,GAAG,MAAOC,WAAP,IAAuB;AACvC,MAAI;AAAA;;AACF,QAAI,CAACC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAL,EAAoC;AAClC,YAAM,IAAIC,KAAJ,CAAU,gBAAV,CAAN;AACD,KAHC,CAIF;;;AACA,QAAIC,QAAQ,GAAGH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAf;AAEAE,IAAAA,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWF,QAAX,CAAX;AAEA,UAAMG,IAAI,gBAAGH,QAAH,8CAAG,UAAUI,IAAV,CAAgBD,IAAD,IAAUA,IAAI,CAACE,KAAL,KAAeT,WAAW,CAACS,KAApD,CAAb;;AAEA,QAAI,CAACF,IAAL,EAAW;AACT,YAAM,IAAIJ,KAAJ,CAAU,gBAAV,CAAN;AACD,KAFD,MAEO;AACL,UAAII,IAAI,CAACG,QAAL,KAAkBV,WAAW,CAACU,QAAlC,EAA4C;AAC1C,cAAM,IAAIP,KAAJ,CAAU,qBAAV,CAAN;AACD,OAFD,MAEO;AACL,eAAO;AAAEQ,UAAAA,OAAO,EAAE,IAAX;AAAiBC,UAAAA,OAAO,EAAE,YAA1B;AAAwCC,UAAAA,IAAI,EAAEN;AAA9C,SAAP;AACD;AACF;AACF,GApBD,CAoBE,OAAOO,GAAP,EAAY;AACZ,WAAO;AAAEH,MAAAA,OAAO,EAAE,KAAX;AAAkBI,MAAAA,GAAG,EAAG,GAAED,GAAG,CAACF,OAAQ;AAAtC,KAAP;AACD;AACF,CAxBD;;AA0BA,eAAeb,SAAf","sourcesContent":["const loginUser = async (userPayload) => {\n  try {\n    if (!localStorage.getItem(\"users\")) {\n      throw new Error(\"User not found\");\n    }\n    // check user in database\n    let allUsers = localStorage.getItem(\"users\");\n\n    allUsers = JSON.parse(allUsers);\n\n    const user = allUsers?.find((user) => user.email === userPayload.email);\n\n    if (!user) {\n      throw new Error(\"User not found\");\n    } else {\n      if (user.password !== userPayload.password) {\n        throw new Error(\"Invalid credentials\");\n      } else {\n        return { success: true, message: \"User found\", data: user };\n      }\n    }\n  } catch (err) {\n    return { success: false, msg: `${err.message}` };\n  }\n};\n\nexport default loginUser;\n"]},"metadata":{},"sourceType":"module"}