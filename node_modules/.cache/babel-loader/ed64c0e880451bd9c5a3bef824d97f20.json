{"ast":null,"code":"import _toConsumableArray from\"/Users/navyabhatia/Desktop/react-wiki 2/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/navyabhatia/Desktop/react-wiki 2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import{useNavigate}from\"react-router-dom\";import{useParams}from\"react-router-dom\";import Search from\"../Search/Search\";import Navbar from\"../Navbar/Navbar\";import{Typography,Container}from\"@mui/material\";import MyToastContainer from\"../MyToastContainer\";import{toast}from\"react-toastify\";import\"react-toastify/dist/ReactToastify.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var SavedCharacters=function SavedCharacters(){var _useParams=useParams(),id=_useParams.id;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),fetchedData=_useState2[0],updateFetchedData=_useState2[1];var name=fetchedData.name,location=fetchedData.location,origin=fetchedData.origin,gender=fetchedData.gender,image=fetchedData.image,status=fetchedData.status,species=fetchedData.species;var navigate=useNavigate();// access only if logged in\nuseEffect(function(){if(!localStorage.getItem(\"isLoggedIn\")){navigate(\"/login\",{replace:true});}});// get saved characters from local storage\nuseEffect(function(){var savedCharacters=localStorage.getItem(\"saveCharacters\");savedCharacters=JSON.parse(savedCharacters);console.log(savedCharacters);updateFetchedData(_toConsumableArray(savedCharacters));},[]);// set filterCharacters state\nuseEffect(function(){updateFetchedData(_toConsumableArray(fetchedData));},[fetchedData]);// remove saved character\nvar removeCharacter=function removeCharacter(payload){var _characters;var characters=localStorage.getItem(\"saveCharacters\");characters=JSON.parse(characters);var updatedCharacters=(_characters=characters)===null||_characters===void 0?void 0:_characters.filter(function(item){return item.id!==payload.id;});localStorage.setItem(\"saveCharacters\",JSON.stringify(updatedCharacters));updateFetchedData(_toConsumableArray(JSON.parse(localStorage.getItem(\"saveCharacters\"))));toast.success(\"\".concat(payload.name,\" removed successfully\"));};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(MyToastContainer,{}),/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(Search,{}),/*#__PURE__*/_jsxs(Container,{sx:{marginBottom:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",sx:{textAlign:\"center\"},children:\"Saved Characters\"}),fetchedData.length===0&&/*#__PURE__*/_jsx(Typography,{variant:\"overline\",sx:{fontSize:\"1.2rem\",color:\"gray\"},children:\"You have no saved characters\"})]}),\"console.log (character)\"]});};export default SavedCharacters;","map":{"version":3,"sources":["/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Cards/SavedCharacters.js"],"names":["React","useState","useEffect","useNavigate","useParams","Search","Navbar","Typography","Container","MyToastContainer","toast","SavedCharacters","id","fetchedData","updateFetchedData","name","location","origin","gender","image","status","species","navigate","localStorage","getItem","replace","savedCharacters","JSON","parse","console","log","removeCharacter","payload","characters","updatedCharacters","filter","item","setItem","stringify","success","marginBottom","textAlign","length","fontSize","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport Search from \"../Search/Search\";\nimport Navbar from \"../Navbar/Navbar\"\nimport { Typography, Container } from \"@mui/material\";\nimport MyToastContainer from \"../MyToastContainer\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst SavedCharacters = () => {\n    let { id } = useParams();\n\n  let [fetchedData, updateFetchedData] = useState([]);\n  let { name, location, origin, gender, image, status, species } = fetchedData;\n\n  const navigate = useNavigate();\n\n  // access only if logged in\n  useEffect(() => {\n    if (!localStorage.getItem(\"isLoggedIn\")) {\n      navigate(\"/login\", { replace: true });\n    }\n  });\n\n  // get saved characters from local storage\n  useEffect(() => {\n    let savedCharacters = localStorage.getItem(\"saveCharacters\");\n    savedCharacters = JSON.parse(savedCharacters);\n    console.log(savedCharacters);\n    updateFetchedData([...savedCharacters]);\n  }, []);\n\n  // set filterCharacters state\n  useEffect(() => {\n    updateFetchedData([...fetchedData]);\n  }, [fetchedData]);\n\n  // remove saved character\n  const removeCharacter = (payload) => {\n    let characters = localStorage.getItem(\"saveCharacters\");\n    characters = JSON.parse(characters);\n    const updatedCharacters = characters?.filter(\n      (item) => item.id !== payload.id\n    );\n    localStorage.setItem(\"saveCharacters\", JSON.stringify(updatedCharacters));\n    updateFetchedData([...JSON.parse(localStorage.getItem(\"saveCharacters\"))]);\n    toast.success(`${payload.name} removed successfully`);\n  };\n\n  return (\n    <>\n      {<MyToastContainer />}\n      <Navbar />\n      <Search />\n      <Container sx={{ marginBottom: 1 }}>\n        <Typography variant=\"h4\" sx={{ textAlign: \"center\" }}>\n          Saved Characters\n        </Typography>\n        {fetchedData.length === 0 && (\n          <Typography\n            variant=\"overline\"\n            sx={{ fontSize: \"1.2rem\", color: \"gray\" }}>\n            You have no saved characters\n          </Typography>\n        )}\n      </Container>\n      console.log (character)\n    </>\n  );\n};\n\nexport default SavedCharacters;\n"]},"metadata":{},"sourceType":"module"}