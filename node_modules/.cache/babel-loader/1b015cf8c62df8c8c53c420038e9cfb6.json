{"ast":null,"code":"var _jsxFileName = \"/Users/navyabhatia/Downloads/rick-and-marty-main/src/Components/Characters/CharacterList.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Character from \"./Character\";\nimport { Container, Grid, Paper } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport saveCharacterToDatabase from \"../../API/saveCharacter\";\nimport MyToastContainer from \"../MyToastContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CharacterList = props => {\n  _s();\n\n  const {\n    characters,\n    removeCharacter\n  } = props;\n  const navigate = useNavigate();\n\n  const checkLoggedIn = () => localStorage.getItem(\"isLoggedIn\");\n\n  const handleSaveCharacter = async payload => {\n    try {\n      if (!checkLoggedIn()) {\n        // is not logged in navigate to login\n        navigate(\"/login\");\n        return;\n      }\n\n      const savedCharacter = await saveCharacterToDatabase(payload);\n      console.log(\"data saved\", savedCharacter);\n\n      if (!savedCharacter.success) {\n        throw new Error(`${savedCharacter.msg}`);\n      }\n\n      toast.success(`${savedCharacter.msg}`);\n    } catch (err) {\n      toast.error(`${err.message}`);\n      console.log(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MyToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        rowSpacing: 3,\n        columnSpacing: {\n          xs: 3\n        },\n        justifyContent: \"center\",\n        sx: {\n          marginBottom: \"30px\"\n        },\n        children: characters === null || characters === void 0 ? void 0 : characters.map(character => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              boxShadow: 0\n            },\n            children: /*#__PURE__*/_jsxDEV(Character, {\n              character: character,\n              handleSaveCharacter: handleSaveCharacter,\n              removeCharacter: removeCharacter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, character.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CharacterList, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CharacterList;\nexport default CharacterList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharacterList\");","map":{"version":3,"sources":["/Users/navyabhatia/Downloads/rick-and-marty-main/src/Components/Characters/CharacterList.jsx"],"names":["React","Character","Container","Grid","Paper","useNavigate","toast","saveCharacterToDatabase","MyToastContainer","CharacterList","props","characters","removeCharacter","navigate","checkLoggedIn","localStorage","getItem","handleSaveCharacter","payload","savedCharacter","console","log","success","Error","msg","err","error","message","xs","marginBottom","map","character","boxShadow","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,KAA1B,QAAuC,eAAvC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,uCAAP;AACA,OAAOC,uBAAP,MAAoC,yBAApC;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAkCF,KAAxC;AACA,QAAMG,QAAQ,GAAGR,WAAW,EAA5B;;AACA,QAAMS,aAAa,GAAG,MAAMC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAA5B;;AAEA,QAAMC,mBAAmB,GAAG,MAAOC,OAAP,IAAmB;AAC7C,QAAI;AACF,UAAI,CAACJ,aAAa,EAAlB,EAAsB;AACpB;AACAD,QAAAA,QAAQ,CAAC,QAAD,CAAR;AACA;AACD;;AACD,YAAMM,cAAc,GAAG,MAAMZ,uBAAuB,CAACW,OAAD,CAApD;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,cAA1B;;AACA,UAAI,CAACA,cAAc,CAACG,OAApB,EAA6B;AAC3B,cAAM,IAAIC,KAAJ,CAAW,GAAEJ,cAAc,CAACK,GAAI,EAAhC,CAAN;AACD;;AACDlB,MAAAA,KAAK,CAACgB,OAAN,CAAe,GAAEH,cAAc,CAACK,GAAI,EAApC;AACD,KAZD,CAYE,OAAOC,GAAP,EAAY;AACZnB,MAAAA,KAAK,CAACoB,KAAN,CAAa,GAAED,GAAG,CAACE,OAAQ,EAA3B;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACE,OAAhB;AACD;AACF,GAjBD;;AAmBA,sBACE;AAAA,4BACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,UAAU,EAAE,CAFd;AAGE,QAAA,aAAa,EAAE;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAHjB;AAIE,QAAA,cAAc,EAAC,QAJjB;AAKE,QAAA,EAAE,EAAE;AACFC,UAAAA,YAAY,EAAE;AADZ,SALN;AAAA,kBAQGlB,UARH,aAQGA,UARH,uBAQGA,UAAU,CAAEmB,GAAZ,CAAiBC,SAAD,iBACf,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAC,MAAd;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,EAAE,EAAE;AAAEC,cAAAA,SAAS,EAAE;AAAb,aAAX;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,SAAS,EAAED,SADb;AAEE,cAAA,mBAAmB,EAAEd,mBAFvB;AAGE,cAAA,eAAe,EAAEL;AAHnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,WAA0BmB,SAAS,CAACE,EAApC;AAAA;AAAA;AAAA;AAAA,gBADD;AARH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AA2BD,CAnDD;;GAAMxB,a;UAEaJ,W;;;KAFbI,a;AAqDN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport Character from \"./Character\";\nimport { Container, Grid, Paper } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport saveCharacterToDatabase from \"../../API/saveCharacter\";\nimport MyToastContainer from \"../MyToastContainer\";\n\nconst CharacterList = (props) => {\n  const { characters, removeCharacter } = props;\n  const navigate = useNavigate();\n  const checkLoggedIn = () => localStorage.getItem(\"isLoggedIn\");\n\n  const handleSaveCharacter = async (payload) => {\n    try {\n      if (!checkLoggedIn()) {\n        // is not logged in navigate to login\n        navigate(\"/login\");\n        return;\n      }\n      const savedCharacter = await saveCharacterToDatabase(payload);\n      console.log(\"data saved\", savedCharacter);\n      if (!savedCharacter.success) {\n        throw new Error(`${savedCharacter.msg}`);\n      }\n      toast.success(`${savedCharacter.msg}`);\n    } catch (err) {\n      toast.error(`${err.message}`);\n      console.log(err.message);\n    }\n  };\n\n  return (\n    <>\n      <MyToastContainer />\n      <Container>\n        <Grid\n          container\n          rowSpacing={3}\n          columnSpacing={{ xs: 3 }}\n          justifyContent=\"center\"\n          sx={{\n            marginBottom: \"30px\",\n          }}>\n          {characters?.map((character) => (\n            <Grid item xs=\"auto\" key={character.id}>\n              <Paper sx={{ boxShadow: 0 }}>\n                <Character\n                  character={character}\n                  handleSaveCharacter={handleSaveCharacter}\n                  removeCharacter={removeCharacter}\n                />\n              </Paper>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nexport default CharacterList;\n"]},"metadata":{},"sourceType":"module"}