{"ast":null,"code":"var _jsxFileName = \"/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Cards/Cards.js\";\nimport React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport CardsDetails from './CardsDetails';\nimport { Link } from \"react-router-dom\"; //const cards vali ststement se detructuring the data we got from fetched data\n//i.e hme yahn data mil gaya ..now we will map data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cards = _ref => {\n  let {\n    page,\n    results\n  } = _ref;\n  let display;\n\n  if (results) {\n    //searched char present in page\n    //x will target each of the result you can write anything there\n    display = results.map(x => {\n      let {\n        id,\n        name,\n        image,\n        location,\n        status\n      } = x;\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: `${page}${id}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4\",\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              maxWidth: 345,\n              boxShadow: \"0 5px 8px 0 rgba(0, 0, 0, 0.3)\",\n              border: \"2px solid #0b5ed7\",\n              // borderColor: \"#0b5ed7\",\n              //  borderRadius: \"10px\",\n              paddingBottom: \"10px\",\n              marginTop: 20,\n              backgroundColor: \"#fafafa\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              style: {\n                height: \"150px\",\n                width: \"150\",\n                borderRadius: \"10px 10px 0 0\"\n              },\n              image: image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"primary\",\n                variant: \"h5\",\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                variant: \"subtitle2\",\n                children: status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(BookmarkIcon, {\n            style: {\n              color: \"black\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this);\n    });\n  } else {\n    //not present\n    display = \"No Characters Found :/\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: display\n  }, void 0, false);\n};\n\n_c = Cards;\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Cards/Cards.js"],"names":["React","Card","CardContent","CardMedia","Typography","BookmarkIcon","CardsDetails","Link","Cards","page","results","display","map","x","id","name","image","location","status","maxWidth","boxShadow","border","paddingBottom","marginTop","backgroundColor","height","width","borderRadius","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAKA;AACA;;;;;AACA,MAAMC,KAAK,GAAG,QAAsB;AAAA,MAArB;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAqB;AAClC,MAAIC,OAAJ;;AACA,MAAID,OAAJ,EAAa;AACX;AACA;AACAC,IAAAA,OAAO,GAAGD,OAAO,CAACE,GAAR,CAAaC,CAAD,IAAO;AAC3B,UAAI;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,IAAN;AAAYC,QAAAA,KAAZ;AAAmBC,QAAAA,QAAnB;AAA6BC,QAAAA;AAA7B,UAAwCL,CAA5C;AACA,0BACE,QAAC,IAAD;AACA,QAAA,EAAE,EAAG,GAAEJ,IAAK,GAAEK,EAAG,EADjB;AAAA,+BAIA;AAAc,UAAA,SAAS,EAAC,OAAxB;AAAA,kCACE,QAAC,IAAD;AACE,YAAA,KAAK,EAAE;AACLK,cAAAA,QAAQ,EAAE,GADL;AAELC,cAAAA,SAAS,EAAE,gCAFN;AAGLC,cAAAA,MAAM,EAAE,mBAHH;AAIL;AACA;AACAC,cAAAA,aAAa,EAAE,MANV;AAOLC,cAAAA,SAAS,EAAE,EAPN;AAQLC,cAAAA,eAAe,EAAE;AARZ,aADT;AAAA,oCAYE,QAAC,SAAD;AACE,cAAA,KAAK,EAAE;AACLC,gBAAAA,MAAM,EAAE,OADH;AAELC,gBAAAA,KAAK,EAAE,KAFF;AAGLC,gBAAAA,YAAY,EAAE;AAHT,eADT;AAOE,cAAA,KAAK,EAAEX;AAPT;AAAA;AAAA;AAAA;AAAA,oBAZF,eAqBE,QAAC,WAAD;AAAA,sCACE,QAAC,UAAD;AAAY,gBAAA,KAAK,EAAC,SAAlB;AAA4B,gBAAA,OAAO,EAAC,IAApC;AAAA,0BACGD;AADH;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,QAAC,UAAD;AAAY,gBAAA,KAAK,EAAC,eAAlB;AAAkC,gBAAA,OAAO,EAAC,WAA1C;AAAA,0BACGG;AADH;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eA+BE,QAAC,YAAD;AACA,YAAA,KAAK,EAAE;AACLU,cAAAA,KAAK,EAAE;AADF;AADP;AAAA;AAAA;AAAA;AAAA,kBA/BF;AAAA,WAAUd,EAAV;AAAA;AAAA;AAAA;AAAA;AAJA,SAEKA,EAFL;AAAA;AAAA;AAAA;AAAA,cADF;AA6CD,KA/CS,CAAV;AAgDD,GAnDD,MAmDO;AACL;AACAH,IAAAA,OAAO,GAAG,wBAAV;AACD;;AAED,sBAAO;AAAA,cAAGA;AAAH,mBAAP;AACD,CA3DD;;KAAMH,K;AA6DN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport CardsDetails from './CardsDetails' ;\nimport { Link } from \"react-router-dom\";\n\n\n\n\n//const cards vali ststement se detructuring the data we got from fetched data\n//i.e hme yahn data mil gaya ..now we will map data\nconst Cards = ({page, results }) => {\n  let display;\n  if (results) {\n    //searched char present in page\n    //x will target each of the result you can write anything there\n    display = results.map((x) => {\n      let { id, name, image, location, status } = x;\n      return (\n        <Link\n        to={`${page}${id}`}\n        key={id}\n      >\n        <div key={id} className=\"col-4\">\n          <Card\n            style={{\n              maxWidth: 345,\n              boxShadow: \"0 5px 8px 0 rgba(0, 0, 0, 0.3)\",\n              border: \"2px solid #0b5ed7\",\n              // borderColor: \"#0b5ed7\",\n              //  borderRadius: \"10px\",\n              paddingBottom: \"10px\",\n              marginTop: 20,\n              backgroundColor: \"#fafafa\"\n            }}\n          >\n            <CardMedia\n              style={{\n                height: \"150px\",\n                width: \"150\",\n                borderRadius: \"10px 10px 0 0\"\n\n              }}\n              image={image}\n            />\n            <CardContent>\n              <Typography color=\"primary\" variant=\"h5\">\n                {name}\n              </Typography>\n              <Typography color=\"textSecondary\" variant=\"subtitle2\">\n                {status}\n              </Typography>\n            </CardContent>\n          </Card>\n          <BookmarkIcon \n          style={{\n            color :\"black\"\n            \n          }}\n          />\n        </div>\n        </Link>\n      );\n    });\n  } else {\n    //not present\n    display = \"No Characters Found :/\";\n  }\n\n  return <>{display}</>;\n};\n\nexport default Cards;\n"]},"metadata":{},"sourceType":"module"}