{"ast":null,"code":"var _jsxFileName = \"/Users/navyabhatia/Desktop/react-wiki/src/components/Card/Card.jsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./Card.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Card = _ref => {\n  let {\n    page,\n    results\n  } = _ref;\n  let display;\n\n  if (results) {\n    display = results.map(x => {\n      let {\n        id,\n        image,\n        name,\n        status,\n        location\n      } = x;\n      return /*#__PURE__*/_jsxDEV(Link, {\n        style: {\n          textDecoration: \"none\"\n        },\n        to: `${page}${id}`,\n        className: \"col-lg-4 col-md-6 col-sm-6 col-12 mb-4 position-relative text-dark\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.card} d-flex flex-column justify-content-center`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: `${styles.img} img-fluid`,\n            src: image,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${styles.content}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fs-5 fw-bold mb-4\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fs-6 fw-normal\",\n                children: \"Last Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fs-5\",\n                children: location.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), (() => {\n          if (status === \"Dead\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${styles.badge} position-absolute badge bg-danger`,\n              children: status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this);\n          } else if (status === \"Alive\") {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${styles.badge} position-absolute badge bg-success`,\n              children: status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${styles.badge} position-absolute badge bg-secondary`,\n              children: status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this);\n          }\n        })()]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this);\n    });\n  } else {\n    display = \"No Characters Found :/\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: display\n  }, void 0, false);\n};\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/navyabhatia/Desktop/react-wiki/src/components/Card/Card.jsx"],"names":["React","Link","styles","Card","page","results","display","map","x","id","image","name","status","location","textDecoration","card","img","content","badge"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;;AAEA,MAAMC,IAAI,GAAG,QAAuB;AAAA,MAAtB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAsB;AAClC,MAAIC,OAAJ;;AAEA,MAAID,OAAJ,EAAa;AACXC,IAAAA,OAAO,GAAGD,OAAO,CAACE,GAAR,CAAaC,CAAD,IAAO;AAC3B,UAAI;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,KAAN;AAAaC,QAAAA,IAAb;AAAmBC,QAAAA,MAAnB;AAA2BC,QAAAA;AAA3B,UAAwCL,CAA5C;AAEA,0BACE,QAAC,IAAD;AACE,QAAA,KAAK,EAAE;AAAEM,UAAAA,cAAc,EAAE;AAAlB,SADT;AAEE,QAAA,EAAE,EAAG,GAAEV,IAAK,GAAEK,EAAG,EAFnB;AAIE,QAAA,SAAS,EAAC,oEAJZ;AAAA,gCAME;AACE,UAAA,SAAS,EAAG,GAAEP,MAAM,CAACa,IAAK,4CAD5B;AAAA,kCAGE;AAAK,YAAA,SAAS,EAAG,GAAEb,MAAM,CAACc,GAAI,YAA9B;AAA2C,YAAA,GAAG,EAAEN,KAAhD;AAAuD,YAAA,GAAG,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAK,YAAA,SAAS,EAAG,GAAER,MAAM,CAACe,OAAQ,EAAlC;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,mBAAf;AAAA,wBAAoCN;AAApC;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,EAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAK,gBAAA,SAAS,EAAC,MAAf;AAAA,0BAAuBE,QAAQ,CAACF;AAAhC;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,EAmBG,CAAC,MAAM;AACN,cAAIC,MAAM,KAAK,MAAf,EAAuB;AACrB,gCACE;AACE,cAAA,SAAS,EAAG,GAAEV,MAAM,CAACgB,KAAM,oCAD7B;AAAA,wBAGGN;AAHH;AAAA;AAAA;AAAA;AAAA,oBADF;AAOD,WARD,MAQO,IAAIA,MAAM,KAAK,OAAf,EAAwB;AAC7B,gCACE;AACE,cAAA,SAAS,EAAG,GAAEV,MAAM,CAACgB,KAAM,qCAD7B;AAAA,wBAGGN;AAHH;AAAA;AAAA;AAAA;AAAA,oBADF;AAOD,WARM,MAQA;AACL,gCACE;AACE,cAAA,SAAS,EAAG,GAAEV,MAAM,CAACgB,KAAM,uCAD7B;AAAA,wBAGGN;AAHH;AAAA;AAAA;AAAA;AAAA,oBADF;AAOD;AACF,SA1BA,GAnBH;AAAA,SAGOH,EAHP;AAAA;AAAA;AAAA;AAAA,cADF;AAiDD,KApDS,CAAV;AAqDD,GAtDD,MAsDO;AACLH,IAAAA,OAAO,GAAG,wBAAV;AACD;;AAED,sBAAO;AAAA,cAAGA;AAAH,mBAAP;AACD,CA9DD;;KAAMH,I;AAgEN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./Card.module.scss\";\n\nconst Card = ({ page, results }) => {\n  let display;\n\n  if (results) {\n    display = results.map((x) => {\n      let { id, image, name, status, location } = x;\n\n      return (\n        <Link\n          style={{ textDecoration: \"none\" }}\n          to={`${page}${id}`}\n          key={id}\n          className=\"col-lg-4 col-md-6 col-sm-6 col-12 mb-4 position-relative text-dark\"\n        >\n          <div\n            className={`${styles.card} d-flex flex-column justify-content-center`}\n          >\n            <img className={`${styles.img} img-fluid`} src={image} alt=\"\" />\n            <div className={`${styles.content}`}>\n              <div className=\"fs-5 fw-bold mb-4\">{name}</div>\n              <div className=\"\">\n                <div className=\"fs-6 fw-normal\">Last Location</div>\n                <div className=\"fs-5\">{location.name}</div>\n              </div>\n            </div>\n          </div>\n\n          {(() => {\n            if (status === \"Dead\") {\n              return (\n                <div\n                  className={`${styles.badge} position-absolute badge bg-danger`}\n                >\n                  {status}\n                </div>\n              );\n            } else if (status === \"Alive\") {\n              return (\n                <div\n                  className={`${styles.badge} position-absolute badge bg-success`}\n                >\n                  {status}\n                </div>\n              );\n            } else {\n              return (\n                <div\n                  className={`${styles.badge} position-absolute badge bg-secondary`}\n                >\n                  {status}\n                </div>\n              );\n            }\n          })()}\n        </Link>\n      );\n    });\n  } else {\n    display = \"No Characters Found :/\";\n  }\n\n  return <>{display}</>;\n};\n\nexport default Card;"]},"metadata":{},"sourceType":"module"}