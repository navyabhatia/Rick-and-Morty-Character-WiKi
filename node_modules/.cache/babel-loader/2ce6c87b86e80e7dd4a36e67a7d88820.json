{"ast":null,"code":"import _toConsumableArray from\"/Users/navyabhatia/Desktop/react-wiki 2/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"/Users/navyabhatia/Desktop/react-wiki 2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/navyabhatia/Desktop/react-wiki 2/node_modules/@babel/runtime/regenerator/index.js\";function saveCharacterToDatabase(_x,_x2,_x3,_x4){return _saveCharacterToDatabase.apply(this,arguments);}function _saveCharacterToDatabase(){_saveCharacterToDatabase=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id,name,status,species){var allSaveCharacters,allSaveCharactersArray,characterExist,CURRENT_SAVED_CHARACTERS;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;allSaveCharacters=localStorage.getItem(\"saveCharacters\");if(!allSaveCharacters){// initialize save character array\nlocalStorage.setItem(\"saveCharacters\",JSON.stringify([]));}allSaveCharactersArray=JSON.parse(localStorage.getItem(\"saveCharacters\"));// check if character already saved\ncharacterExist=allSaveCharactersArray===null||allSaveCharactersArray===void 0?void 0:allSaveCharactersArray.some(function(item){return item.id===id;});if(!characterExist){_context.next=7;break;}throw new Error(\"Character already saved before\");case 7:// save character only if not saved yet\n//const { episode, location, origin, ...resData } = payload;\n// save only necessary data to save localstorage space\nCURRENT_SAVED_CHARACTERS=_toConsumableArray(allSaveCharactersArray);localStorage.setItem(\"saveCharacters\",JSON.stringify(CURRENT_SAVED_CHARACTERS));return _context.abrupt(\"return\",{success:true,msg:\"Character saved successfully\",data:id});case 12:_context.prev=12;_context.t0=_context[\"catch\"](0);return _context.abrupt(\"return\",{success:false,msg:\"\".concat(_context.t0.message)});case 15:case\"end\":return _context.stop();}}},_callee,null,[[0,12]]);}));return _saveCharacterToDatabase.apply(this,arguments);}export default saveCharacterToDatabase;","map":{"version":3,"sources":["/Users/navyabhatia/Desktop/react-wiki 2/src/API/saveCharacter.js"],"names":["saveCharacterToDatabase","id","name","status","species","allSaveCharacters","localStorage","getItem","setItem","JSON","stringify","allSaveCharactersArray","parse","characterExist","some","item","Error","CURRENT_SAVED_CHARACTERS","success","msg","data","message"],"mappings":"0YAAeA,CAAAA,uB,6LAAf,iBAAuCC,EAAvC,CAA0CC,IAA1C,CAA+CC,MAA/C,CAAsDC,OAAtD,uNAEQC,iBAFR,CAE4BC,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAF5B,CAGI,GAAI,CAACF,iBAAL,CAAwB,CACtB;AACAC,YAAY,CAACE,OAAb,CAAqB,gBAArB,CAAuCC,IAAI,CAACC,SAAL,CAAe,EAAf,CAAvC,EACD,CAEKC,sBARV,CAQmCF,IAAI,CAACG,KAAL,CAC7BN,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAD6B,CARnC,CAWI;AACMM,cAZV,CAY2BF,sBAZ3B,SAY2BA,sBAZ3B,iBAY2BA,sBAAsB,CAAEG,IAAxB,CACrB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACd,EAAL,GAAYA,EAAtB,EADqB,CAZ3B,KAgBQY,cAhBR,8BAiBY,IAAIG,CAAAA,KAAJ,CAAU,gCAAV,CAjBZ,QAoBI;AACA;AACA;AACMC,wBAvBV,oBAwBSN,sBAxBT,EA2BIL,YAAY,CAACE,OAAb,CACE,gBADF,CAEEC,IAAI,CAACC,SAAL,CAAeO,wBAAf,CAFF,EA3BJ,gCA+BW,CACLC,OAAO,CAAE,IADJ,CAELC,GAAG,CAAE,8BAFA,CAGLC,IAAI,CAAEnB,EAHD,CA/BX,4FAqCW,CAAEiB,OAAO,CAAE,KAAX,CAAkBC,GAAG,WAAK,YAAIE,OAAT,CAArB,CArCX,uE,0DAyCA,cAAerB,CAAAA,uBAAf","sourcesContent":["async function saveCharacterToDatabase(id,name,status,species) {\n  try {\n    let allSaveCharacters = localStorage.getItem(\"saveCharacters\");\n    if (!allSaveCharacters) {\n      // initialize save character array\n      localStorage.setItem(\"saveCharacters\", JSON.stringify([]));\n    }\n\n    const allSaveCharactersArray = JSON.parse(\n      localStorage.getItem(\"saveCharacters\")\n    );\n    // check if character already saved\n    const characterExist = allSaveCharactersArray?.some(\n      (item) => item.id === id\n    );\n\n    if (characterExist) {\n      throw new Error(\"Character already saved before\");\n    }\n\n    // save character only if not saved yet\n    //const { episode, location, origin, ...resData } = payload;\n    // save only necessary data to save localstorage space\n    const CURRENT_SAVED_CHARACTERS = [\n      ...allSaveCharactersArray\n      \n    ];\n    localStorage.setItem(\n      \"saveCharacters\",\n      JSON.stringify(CURRENT_SAVED_CHARACTERS)\n    );\n    return {\n      success: true,\n      msg: \"Character saved successfully\",\n      data: id,\n    };\n  } catch (err) {\n    return { success: false, msg: `${err.message}` };\n  }\n}\n\nexport default saveCharacterToDatabase;\n"]},"metadata":{},"sourceType":"module"}