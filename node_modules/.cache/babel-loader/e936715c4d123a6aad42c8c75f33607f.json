{"ast":null,"code":"var _jsxFileName = \"/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Cards/CardsDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport { useParams } from \"react-router-dom\";\nimport saveCharacterToDatabase from \"../../API/saveCharacter\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardDetails = () => {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  let [fetchedData, updateFetchedData] = useState([]);\n  let {\n    name,\n    location,\n    origin,\n    gender,\n    image,\n    status,\n    species\n  } = fetchedData;\n  let api = `https://rickandmortyapi.com/api/character/${id}`;\n  useEffect(() => {\n    (async function () {\n      let data = await fetch(api).then(res => res.json());\n      updateFetchedData(data);\n    })();\n  }, [api]);\n  const navigate = useNavigate();\n\n  const checkLoggedIn = () => localStorage.getItem(\"isLoggedIn\");\n\n  const handleSaveCharacter = async payload => {\n    try {\n      if (!checkLoggedIn()) {\n        // is not logged in navigate to login\n        navigate(\"/login\");\n        return;\n      }\n\n      const savedCharacter = await saveCharacterToDatabase(payload);\n      console.log(\"data saved\", savedCharacter);\n\n      if (!savedCharacter.success) {\n        throw new Error(`${savedCharacter.msg}`);\n      }\n\n      toast.success(`${savedCharacter.msg}`);\n    } catch (err) {\n      toast.error(`${err.message}`);\n      console.log(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-4\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        maxWidth: 345,\n        boxShadow: \"0 5px 8px 0 rgba(0, 0, 0, 0.3)\",\n        border: \"2px solid #0b5ed7\",\n        // borderColor: \"#0b5ed7\",\n        //  borderRadius: \"10px\",\n        paddingBottom: \"10px\",\n        marginTop: 20,\n        backgroundColor: \"#fafafa\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        style: {\n          height: \"150px\",\n          width: \"150\",\n          borderRadius: \"10px 10px 0 0\"\n        },\n        image: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          color: \"primary\",\n          variant: \"h5\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          variant: \"subtitle2\",\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(BookmarkIcon, {\n      style: {\n        color: \"black\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }, this)]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardDetails, \"eNctSMec7uqzHtlMreml146Bods=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = CardDetails;\nexport default CardDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardDetails\");","map":{"version":3,"sources":["/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Cards/CardsDetails.js"],"names":["React","useState","useEffect","Card","CardContent","CardMedia","Typography","BookmarkIcon","useParams","saveCharacterToDatabase","useNavigate","toast","CardDetails","id","fetchedData","updateFetchedData","name","location","origin","gender","image","status","species","api","data","fetch","then","res","json","navigate","checkLoggedIn","localStorage","getItem","handleSaveCharacter","payload","savedCharacter","console","log","success","Error","msg","err","error","message","maxWidth","boxShadow","border","paddingBottom","marginTop","backgroundColor","height","width","borderRadius","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport { useParams } from \"react-router-dom\";\nimport saveCharacterToDatabase from \"../../API/saveCharacter\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\n\n\nconst CardDetails = () => {\n  let { id } = useParams();\n\n  let [fetchedData, updateFetchedData] = useState([]);\n  let { name, location, origin, gender, image, status, species } = fetchedData;\n\n  let api = `https://rickandmortyapi.com/api/character/${id}`;\n\n  useEffect(() => {\n    (async function () {\n      let data = await fetch(api).then((res) => res.json());\n      updateFetchedData(data);\n    })();\n  }, [api]);\n  \n\n  const navigate = useNavigate();\n  const checkLoggedIn = () => localStorage.getItem(\"isLoggedIn\");\n  const handleSaveCharacter = async (payload) => {\n    try {\n      if (!checkLoggedIn()) {\n        // is not logged in navigate to login\n        navigate(\"/login\");\n        return;\n      }\n      const savedCharacter = await saveCharacterToDatabase(payload);\n      console.log(\"data saved\", savedCharacter);\n      if (!savedCharacter.success) {\n        throw new Error(`${savedCharacter.msg}`);\n      }\n      toast.success(`${savedCharacter.msg}`);\n    } catch (err) {\n      toast.error(`${err.message}`);\n      console.log(err.message);\n    }\n  };\n\n\n\n\n\n  return (\n    <div key={id} className=\"col-4\">\n          <Card\n            style={{\n              maxWidth: 345,\n              boxShadow: \"0 5px 8px 0 rgba(0, 0, 0, 0.3)\",\n              border: \"2px solid #0b5ed7\",\n              // borderColor: \"#0b5ed7\",\n              //  borderRadius: \"10px\",\n              paddingBottom: \"10px\",\n              marginTop: 20,\n              backgroundColor: \"#fafafa\"\n            }}\n          >\n            <CardMedia\n              style={{\n                height: \"150px\",\n                width: \"150\",\n                borderRadius: \"10px 10px 0 0\"\n\n              }}\n              image={image}\n            />\n            <CardContent>\n              <Typography color=\"primary\" variant=\"h5\">\n                {name}\n              </Typography>\n              <Typography color=\"textSecondary\" variant=\"subtitle2\">\n                {status}\n              </Typography>\n            </CardContent>\n          </Card>\n          <BookmarkIcon \n          style={{\n            color :\"black\"\n            \n          }}\n          />\n        </div>\n      );\n\n};\n\nexport default CardDetails;"]},"metadata":{},"sourceType":"module"}