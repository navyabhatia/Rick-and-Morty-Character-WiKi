[{"/Users/navyabhatia/Desktop/react-wiki 2/src/index.js":"1","/Users/navyabhatia/Desktop/react-wiki 2/src/App.js":"2","/Users/navyabhatia/Desktop/react-wiki 2/src/Pages/SavedCharacters.js":"3","/Users/navyabhatia/Desktop/react-wiki 2/src/Pages/RegisterPage.jsx":"4","/Users/navyabhatia/Desktop/react-wiki 2/src/Pages/LoginPage.jsx":"5","/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Cards/Cards.js":"6","/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Search/Search.js":"7","/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Navbar/Navbar.js":"8","/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Filter/Filter.js":"9","/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Pagination/Pagination.js":"10","/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Filter/Category/Gender.js":"11","/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Filter/Category/Status.js":"12","/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Filter/Category/Species.js":"13","/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Auth/Login.jsx":"14","/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Auth/Register.jsx":"15","/Users/navyabhatia/Desktop/react-wiki 2/src/Components/MyToastContainer.js":"16","/Users/navyabhatia/Desktop/react-wiki 2/src/API/LoginUser.js":"17","/Users/navyabhatia/Desktop/react-wiki 2/src/API/RegisterUser.js":"18","/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Filter/FilterBTN.js":"19","/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Cards/CardsDetails.js":"20","/Users/navyabhatia/Desktop/react-wiki 2/src/API/saveCharacter.js":"21","/Users/navyabhatia/Desktop/react-wiki 2/src/Pages/SavedCharactersPage.jsx":"22","/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Cards/SavedCharacters.js":"23"},{"size":229,"mtime":1641711951212,"results":"24","hashOfConfig":"25"},{"size":3475,"mtime":1641797874217,"results":"26","hashOfConfig":"25"},{"size":526,"mtime":1641734113643,"results":"27","hashOfConfig":"25"},{"size":192,"mtime":1641749221244,"results":"28","hashOfConfig":"25"},{"size":177,"mtime":1641749214340,"results":"29","hashOfConfig":"25"},{"size":2962,"mtime":1641795335338,"results":"30","hashOfConfig":"25"},{"size":1040,"mtime":1641712564268,"results":"31","hashOfConfig":"25"},{"size":2665,"mtime":1641719324689,"results":"32","hashOfConfig":"25"},{"size":1603,"mtime":1641757402815,"results":"33","hashOfConfig":"25"},{"size":2708,"mtime":1641798565554,"results":"34","hashOfConfig":"25"},{"size":915,"mtime":1641796775383,"results":"35","hashOfConfig":"25"},{"size":844,"mtime":1641796705518,"results":"36","hashOfConfig":"25"},{"size":1052,"mtime":1641796792633,"results":"37","hashOfConfig":"25"},{"size":2931,"mtime":1641749165372,"results":"38","hashOfConfig":"25"},{"size":3037,"mtime":1641749165375,"results":"39","hashOfConfig":"25"},{"size":399,"mtime":1641747748103,"results":"40","hashOfConfig":"25"},{"size":712,"mtime":1641749133061,"results":"41","hashOfConfig":"25"},{"size":975,"mtime":1641749133063,"results":"42","hashOfConfig":"25"},{"size":836,"mtime":1641797419405,"results":"43","hashOfConfig":"25"},{"size":2047,"mtime":1641793088230,"results":"44","hashOfConfig":"25"},{"size":1186,"mtime":1641795064746,"results":"45","hashOfConfig":"25"},{"size":228,"mtime":1641795094436,"results":"46","hashOfConfig":"25"},{"size":2244,"mtime":1641795101645,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ew9bmx",{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},"/Users/navyabhatia/Desktop/react-wiki 2/src/index.js",[],"/Users/navyabhatia/Desktop/react-wiki 2/src/App.js",["100"],"import \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"; //mini css file\nimport \"bootstrap/dist/js/bootstrap\"; //mini js file\nimport React, { useState, useEffect } from \"react\";\nimport Cards from \"./Components/Cards/Cards\";\nimport Pagination from \"./Components/Pagination/Pagination\";\nimport Search from \"./Components/Search/Search\";\nimport Filter from \"./Components/Filter/Filter\";\nimport Navbar from \"./Components/Navbar/Navbar\"\nimport {BrowserRouter as Router,Routes,Route } from 'react-router-dom'\nimport SavedCharacters from \"./Pages/SavedCharacters\";\n\nimport LoginPage from \"./Pages/LoginPage\";\nimport RegisterPage from \"./Pages/RegisterPage\";\nimport CardDetails from \"./Components/Cards/CardsDetails\";\nimport SavedCharactersPage from \"./Pages/SavedCharactersPage\";\n//all components bhi import krne hai abhi\n/*\nbootstarp vala dekh lena hta lena\n*/\n\n//note:in order to link Home page to main path that is the root we linked it in routes path in function app\n//similarly baki files ko import krke un pages ko link krskte hai\nfunction App(){\n  return (\n     <Router>\n       <div className=\"App\" ><Navbar /></div>\n       <Routes>\n         <Route path=\"/\" element ={<Home />} />\n         <Route path=\"/:id\" element={<CardDetails />} />\n\n         <Route path=\"/Savedcharacters\" element ={<SavedCharacters />} />\n         <Route path=\"/login\" element ={<LoginPage />} />\n         <Route path=\"/register\" element ={<RegisterPage />} />\n\n\n       </Routes>\n\n\n     </Router>\n  )\n}\n//iss Home ko ek page bnaya diya hai\nconst Home = () => {\n  let [pageNumber, setPageNumber] = useState(1); //setpagenum function is used to change the variables value everytime\n  //for adding functionality to search bar to actually search\n  let [search, setSearch] = useState(\"\");\n  let [status, updateStatus] = useState(\"\");\n  let [gender, updateGender] = useState(\"\");\n  let [species, updateSpecies] = useState(\"\");\n\n  let api = `https://rickandmortyapi.com/api/character/?page=${pageNumber}&name=${search}&status=${status}&gender=${gender}&species=${species}`; //stored api\n  \n  let [fetchedData, updateFetchedData] = useState([]); //fetched data =var and updatfetched data is function which gets called and updates the variable\n  let { info, results } = fetchedData; //in this we detrsuctured data into pages=info, results=characters data kyunki hme bss vhi chaiye\n  //passing results to cards component\n  useEffect(() => {\n    (async function () {\n      let data = await fetch(api).then((res) => res.json()); //await likh rhe hai toh to let var wait jab tak data fetch na hojaaye\n      updateFetchedData(data);\n    })();\n  }, [api]);\n\n  return (\n    <div>\n      <div className=\"App\">\n\n        \n\n        <Search setPageNumber={setPageNumber} setSearch={setSearch} />\n\n        <div className=\"container\">\n          <div className=\"row\">\n            <Filter  \n             pageNumber={pageNumber}\n            status={status}\n            updateStatus={updateStatus}\n            updateGender={updateGender}\n            updateSpecies={updateSpecies}\n            updatePageNumber={setPageNumber}\n              />\n\n            <div className=\"col-lg-8 col-12\">\n              <div className=\"row\">\n                <Cards page=\"/\" results={results} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Pagination\n        info={info}\n        pageNumber={pageNumber}\n        setPageNumber={setPageNumber}\n      />\n    </div>\n  );\n}\nexport default App;\n","/Users/navyabhatia/Desktop/react-wiki 2/src/Pages/SavedCharacters.js",[],"/Users/navyabhatia/Desktop/react-wiki 2/src/Pages/RegisterPage.jsx",[],"/Users/navyabhatia/Desktop/react-wiki 2/src/Pages/LoginPage.jsx",[],"/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Cards/Cards.js",["101","102","103","104","105","106","107","108"],"import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport CardsDetails from './CardsDetails' ;\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport saveCharacterToDatabase from \"../../API/saveCharacter\";\nimport SavedCharacters from \"../../Pages/SavedCharacters\";\n\n\n\n//const cards vali ststement se detructuring the data we got from fetched data\n//i.e hme yahn data mil gaya ..now we will map data\nconst Cards = ({page, results }) => {\n  \n  const navigate = useNavigate();\n  const checkLoggedIn = () => localStorage.getItem(\"isLoggedIn\");\n\n  const handleClick = (id,name,status,species) => {\n\n   <saveCharacterToDatabase \n     id={id}\n        name={name}\n        status={status}\n        species={species}\n   />\n\n\n  };\n\n  \n  let display;\n  if (results) {\n    //searched char present in page\n    //x will target each of the result you can write anything there\n    display = results.map((x) => {\n      let { id, name, image, location, status ,gender,species} = x;\n      return (\n\n        <div key={id} className=\"col-4\">\n          <Card\n            style={{\n              color : \"black\" ,\n              maxWidth: 345,\n              boxShadow: \"0 5px 8px 0 rgba(0, 0, 0, 0.3)\",\n              border: \"2px solid #0b5ed7\",\n              // borderColor: \"#0b5ed7\",\n              //  borderRadius: \"10px\",\n              paddingBottom: \"10px\",\n              marginTop: 20,\n              backgroundColor: \"#fafafa\"\n            }}\n          >\n            <CardMedia\n              style={{\n                height: \"150px\",\n                width: \"150\",\n                borderRadius: \"10px 10px 0 0\" ,\n                position: \"center\"\n\n              }}\n              image={image}\n            />\n\n\n            <div >\n          <BookmarkIcon \n          onClick={() => { handleClick({id},{name},{status},{species})}}\n          style={{\n            color :\"black\" ,\n            position: \"right\"\n          }}\n          />\n         </div>\n            <CardContent>\n              <Typography color=\"primary\" variant=\"h5\" color= \"black primary\" type =\"bold\">\n                {name}\n              </Typography>\n              <Typography color=\"textSecondary\" variant=\"subtitle1\">\n                {status}\n              </Typography>\n              <Typography color=\"textSecondary\" variant=\"inherit\">\n                {gender}\n              </Typography>\n              <Typography color=\"textSecondary\" variant=\"subtitle2\">\n                {species}\n              </Typography>\n            </CardContent>\n          </Card>\n          \n        </div>\n      \n      );\n    });\n  } else {\n    //not present\n    display = \"No Characters Found :/\";\n  }\n\n  return <>{display}</>;\n};\n\nexport default Cards;\n","/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Search/Search.js",["109"],"import React from \"react\";\nimport styles from \"./Search.css\";\nimport Button from \"@mui/material/Button\";\n\nconst Search = ({ setSearch, setPageNumber }) => {\n  return (\n    <form className=\"design\">\n      <input\n        onChange={(e) => {\n          setPageNumber(1); //WRITTEN THIS AS WE WANTED TO SEARCH HO TOH 1 PAGE MEIN HI RHE OR SEARCH 1 SE HI START KARE YEH NA HO KI  4 page mein search krrhe hai toh 4 se aage ka search kre\n          setSearch(e.target.value); //through onchange capturing the data awe are writing in search and then calls setsearch function for it which updates search varoable and puts in api then search it and so on\n        }}\n        type=\"text\"\n        placeholder=\"Search for characters\"\n        className=\"st\"\n      />\n      <Button\n        className=\"btn\"\n        onClick={(e) => {\n          e.preventDefault(); //this will prevent itself to referesh again jab we press on search button\n        }}\n        variant=\"contained\"\n      >\n        Search\n      </Button>\n    </form>\n  );\n};\nexport default Search;\n","/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Navbar/Navbar.js",["110","111","112","113","114","115"],"\n\n\nimport { useState } from \"react\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { Container, Typography, Menu, MenuItem, Button } from \"@mui/material\";\n//import MenuIcon from \"@mui/icons-material/Menu\";\n\n//import \"../../App.css\";\n\nconst Navbar = () => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const navigate = useNavigate();\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"isLoggedIn\");\n    console.log(\"logout\");\n    navigate(\"/\", { replace: true });\n  };\n\n  const NavlinkStyle = {\n    textDecoration: \"none\",\n    fontSize: \"1rem\",\n    fontWeight: \"500\",\n    padding: \"5px 8px\",\n  };\n\n  return (\n    <nav\n      style={{\n        width: \"100%\",\n        backgroundColor: \"#D3D3D3\",\n        marginBottom: \"20px\",\n      }}>\n      <Container\n        sx={{\n          height:\"70px\" ,\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}>\n        <NavLink to=\"/\" style={{ textDecoration: \"none\" }}>\n          <Typography variant=\"h3\" component=\"h1\" sx={{ color: \"#000000\" }}>\n          <h1 className=\"text-center ubuntu my-4\">\n          Rick & Morty\n          <span className=\"text-primary\">WiKi</span>\n        </h1>\n          </Typography>\n        </NavLink>\n        {largerWindow()}\n        \n      </Container>\n    </nav>\n  );\n\n  function largerWindow() {\n    return (\n      <div className=\"large\">\n        <ul\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"end\",\n          }}>\n          <li style={{ listStyleType: \"none\" }}>\n            <NavLink to=\"/\" style={{ ...NavlinkStyle, color: \"black\" }}>\n              Home\n            </NavLink>\n          </li>\n          <li style={{ listStyleType: \"none\" }}>\n            <NavLink\n              to=\"/savedcharacters\"\n              style={{ ...NavlinkStyle, color: \"black\" }}>\n              SavedCharacters\n            </NavLink>\n          </li>\n          <li style={{ listStyleType: \"none\" }}>\n            {localStorage.getItem(\"isLoggedIn\") ? (\n              <NavLink\n                to=\"\"\n                style={{ ...NavlinkStyle, color: \"black\" }}\n                onClick={handleLogout}>\n                Logout\n              </NavLink>\n            ) : (\n              <NavLink to=\"/login\" style={{ ...NavlinkStyle, color: \"black\" }}>\n                Login\n              </NavLink>\n            )}\n          </li>\n        </ul>\n      </div>\n    );\n  }\n\n\n};\n\nexport default Navbar;\n","/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Filter/Filter.js",[],"/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Pagination/Pagination.js",[],"/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Filter/Category/Gender.js",[],"/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Filter/Category/Status.js",[],"/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Filter/Category/Species.js",[],"/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Auth/Login.jsx",[],"/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Auth/Register.jsx",[],"/Users/navyabhatia/Desktop/react-wiki 2/src/Components/MyToastContainer.js",[],"/Users/navyabhatia/Desktop/react-wiki 2/src/API/LoginUser.js",[],"/Users/navyabhatia/Desktop/react-wiki 2/src/API/RegisterUser.js",[],"/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Filter/FilterBTN.js",[],"/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Cards/CardsDetails.js",["116","117","118","119","120","121","122"],"import React, { useState, useEffect } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport { useParams } from \"react-router-dom\";\nimport saveCharacterToDatabase from \"../../API/saveCharacter\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\n\n\nconst CardDetails = () => {\n  let { id } = useParams();\n\n  let [fetchedData, updateFetchedData] = useState([]);\n  let { name, location, origin, gender, image, status, species } = fetchedData;\n\n  let api = `https://rickandmortyapi.com/api/character/${id}`;\n\n  useEffect(() => {\n    (async function () {\n      let data = await fetch(api).then((res) => res.json());\n      updateFetchedData(data);\n    })();\n  }, [api]);\n  return (\n    <div key={id} className=\"col-4\">\n          <Card\n            style={{\n              maxWidth: 345,\n              boxShadow: \"0 5px 8px 0 rgba(0, 0, 0, 0.3)\",\n              border: \"2px solid #0b5ed7\",\n              // borderColor: \"#0b5ed7\",\n              //  borderRadius: \"10px\",\n              paddingBottom: \"10px\",\n              marginTop: 20,\n              backgroundColor: \"#fafafa\"\n            }}\n          >\n            <CardMedia\n              style={{\n                height: \"150px\",\n                width: \"150\",\n                borderRadius: \"10px 10px 0 0\"\n\n              }}\n              image={image}\n            />\n            <CardContent>\n              <Typography color=\"primary\" variant=\"h5\">\n                {name}\n              </Typography>\n              <Typography color=\"textSecondary\" variant=\"subtitle2\">\n                {status}\n              </Typography>\n            </CardContent>\n          </Card>\n          <BookmarkIcon \n          style={{\n            color :\"black\"\n            \n          }}\n          />\n        </div>\n      );\n\n};\n\nexport default CardDetails;","/Users/navyabhatia/Desktop/react-wiki 2/src/API/saveCharacter.js",[],"/Users/navyabhatia/Desktop/react-wiki 2/src/Pages/SavedCharactersPage.jsx",[],"/Users/navyabhatia/Desktop/react-wiki 2/src/Components/Cards/SavedCharacters.js",["123","124","125","126","127","128","129","130","131"],"import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport Search from \"../Search/Search\";\nimport Navbar from \"../Navbar/Navbar\"\nimport { Typography, Container } from \"@mui/material\";\nimport MyToastContainer from \"../MyToastContainer\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst SavedCharacters = () => {\n    let { id } = useParams();\n\n  let [fetchedData, updateFetchedData] = useState([]);\n  let { name, location, origin, gender, image, status, species } = fetchedData;\n\n  const navigate = useNavigate();\n\n  // access only if logged in\n  useEffect(() => {\n    if (!localStorage.getItem(\"isLoggedIn\")) {\n      navigate(\"/login\", { replace: true });\n    }\n  });\n\n  // get saved characters from local storage\n  useEffect(() => {\n    let savedCharacters = localStorage.getItem(\"saveCharacters\");\n    savedCharacters = JSON.parse(savedCharacters);\n    console.log(savedCharacters);\n    updateFetchedData([...savedCharacters]);\n  }, []);\n\n  // set filterCharacters state\n  useEffect(() => {\n    updateFetchedData([...fetchedData]);\n  }, [fetchedData]);\n\n  // remove saved character\n  const removeCharacter = (payload) => {\n    let characters = localStorage.getItem(\"saveCharacters\");\n    characters = JSON.parse(characters);\n    const updatedCharacters = characters?.filter(\n      (item) => item.id !== payload.id\n    );\n    localStorage.setItem(\"saveCharacters\", JSON.stringify(updatedCharacters));\n    updateFetchedData([...JSON.parse(localStorage.getItem(\"saveCharacters\"))]);\n    toast.success(`${payload.name} removed successfully`);\n  };\n\n  return (\n    <>\n      {<MyToastContainer />}\n      <Navbar />\n      <Search />\n      <Container sx={{ marginBottom: 1 }}>\n        <Typography variant=\"h4\" sx={{ textAlign: \"center\" }}>\n          Saved Characters\n        </Typography>\n        {fetchedData.length === 0 && (\n          <Typography\n            variant=\"overline\"\n            sx={{ fontSize: \"1.2rem\", color: \"gray\" }}>\n            You have no saved characters\n          </Typography>\n        )}\n      </Container>\n      console.log (character)\n    </>\n  );\n};\n\nexport default SavedCharacters;\n",{"ruleId":"132","severity":1,"message":"133","line":16,"column":8,"nodeType":"134","messageId":"135","endLine":16,"endColumn":27},{"ruleId":"132","severity":1,"message":"136","line":7,"column":8,"nodeType":"134","messageId":"135","endLine":7,"endColumn":20},{"ruleId":"132","severity":1,"message":"137","line":8,"column":10,"nodeType":"134","messageId":"135","endLine":8,"endColumn":14},{"ruleId":"132","severity":1,"message":"138","line":10,"column":8,"nodeType":"134","messageId":"135","endLine":10,"endColumn":31},{"ruleId":"132","severity":1,"message":"139","line":11,"column":8,"nodeType":"134","messageId":"135","endLine":11,"endColumn":23},{"ruleId":"132","severity":1,"message":"140","line":19,"column":9,"nodeType":"134","messageId":"135","endLine":19,"endColumn":17},{"ruleId":"132","severity":1,"message":"141","line":20,"column":9,"nodeType":"134","messageId":"135","endLine":20,"endColumn":22},{"ruleId":"132","severity":1,"message":"142","line":40,"column":30,"nodeType":"134","messageId":"135","endLine":40,"endColumn":38},{"ruleId":"143","severity":1,"message":"144","line":79,"column":56,"nodeType":"145","messageId":"146","endLine":79,"endColumn":78},{"ruleId":"132","severity":1,"message":"147","line":2,"column":8,"nodeType":"134","messageId":"135","endLine":2,"endColumn":14},{"ruleId":"132","severity":1,"message":"148","line":6,"column":33,"nodeType":"134","messageId":"135","endLine":6,"endColumn":37},{"ruleId":"132","severity":1,"message":"149","line":6,"column":39,"nodeType":"134","messageId":"135","endLine":6,"endColumn":47},{"ruleId":"132","severity":1,"message":"150","line":6,"column":49,"nodeType":"134","messageId":"135","endLine":6,"endColumn":55},{"ruleId":"132","severity":1,"message":"151","line":14,"column":9,"nodeType":"134","messageId":"135","endLine":14,"endColumn":13},{"ruleId":"132","severity":1,"message":"152","line":16,"column":9,"nodeType":"134","messageId":"135","endLine":16,"endColumn":20},{"ruleId":"132","severity":1,"message":"153","line":19,"column":9,"nodeType":"134","messageId":"135","endLine":19,"endColumn":20},{"ruleId":"132","severity":1,"message":"138","line":8,"column":8,"nodeType":"134","messageId":"135","endLine":8,"endColumn":31},{"ruleId":"132","severity":1,"message":"154","line":9,"column":10,"nodeType":"134","messageId":"135","endLine":9,"endColumn":21},{"ruleId":"132","severity":1,"message":"155","line":10,"column":10,"nodeType":"134","messageId":"135","endLine":10,"endColumn":15},{"ruleId":"132","severity":1,"message":"142","line":18,"column":15,"nodeType":"134","messageId":"135","endLine":18,"endColumn":23},{"ruleId":"132","severity":1,"message":"156","line":18,"column":25,"nodeType":"134","messageId":"135","endLine":18,"endColumn":31},{"ruleId":"132","severity":1,"message":"157","line":18,"column":33,"nodeType":"134","messageId":"135","endLine":18,"endColumn":39},{"ruleId":"132","severity":1,"message":"158","line":18,"column":56,"nodeType":"134","messageId":"135","endLine":18,"endColumn":63},{"ruleId":"132","severity":1,"message":"159","line":12,"column":11,"nodeType":"134","messageId":"135","endLine":12,"endColumn":13},{"ruleId":"132","severity":1,"message":"160","line":15,"column":9,"nodeType":"134","messageId":"135","endLine":15,"endColumn":13},{"ruleId":"132","severity":1,"message":"142","line":15,"column":15,"nodeType":"134","messageId":"135","endLine":15,"endColumn":23},{"ruleId":"132","severity":1,"message":"156","line":15,"column":25,"nodeType":"134","messageId":"135","endLine":15,"endColumn":31},{"ruleId":"132","severity":1,"message":"157","line":15,"column":33,"nodeType":"134","messageId":"135","endLine":15,"endColumn":39},{"ruleId":"132","severity":1,"message":"161","line":15,"column":41,"nodeType":"134","messageId":"135","endLine":15,"endColumn":46},{"ruleId":"132","severity":1,"message":"162","line":15,"column":48,"nodeType":"134","messageId":"135","endLine":15,"endColumn":54},{"ruleId":"132","severity":1,"message":"158","line":15,"column":56,"nodeType":"134","messageId":"135","endLine":15,"endColumn":63},{"ruleId":"132","severity":1,"message":"163","line":40,"column":9,"nodeType":"134","messageId":"135","endLine":40,"endColumn":24},"no-unused-vars","'SavedCharactersPage' is defined but never used.","Identifier","unusedVar","'CardsDetails' is defined but never used.","'Link' is defined but never used.","'saveCharacterToDatabase' is defined but never used.","'SavedCharacters' is defined but never used.","'navigate' is assigned a value but never used.","'checkLoggedIn' is assigned a value but never used.","'location' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'styles' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'Button' is defined but never used.","'open' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'useNavigate' is defined but never used.","'toast' is defined but never used.","'origin' is assigned a value but never used.","'gender' is assigned a value but never used.","'species' is assigned a value but never used.","'id' is assigned a value but never used.","'name' is assigned a value but never used.","'image' is assigned a value but never used.","'status' is assigned a value but never used.","'removeCharacter' is assigned a value but never used."]