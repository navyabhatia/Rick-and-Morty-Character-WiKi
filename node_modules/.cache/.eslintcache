[{"/Users/navyabhatia/Desktop/react-wiki/src/index.js":"1","/Users/navyabhatia/Desktop/react-wiki/src/App.js":"2","/Users/navyabhatia/Desktop/react-wiki/src/Components/Cards/Cards.js":"3","/Users/navyabhatia/Desktop/react-wiki/src/Components/Filter/Filter.js":"4","/Users/navyabhatia/Desktop/react-wiki/src/Components/Pagination/Pagination.js":"5","/Users/navyabhatia/Desktop/react-wiki/src/Components/Search/Search.js":"6","/Users/navyabhatia/Desktop/react-wiki/src/Components/Filter/Category/Species.js":"7","/Users/navyabhatia/Desktop/react-wiki/src/Components/Filter/Category/Status.js":"8","/Users/navyabhatia/Desktop/react-wiki/src/Components/Filter/Category/Gender.js":"9","/Users/navyabhatia/Desktop/react-wiki/src/Pages/SavedCharacters.js":"10","/Users/navyabhatia/Desktop/react-wiki/src/Components/Navbar/Navbar.js":"11","/Users/navyabhatia/Desktop/react-wiki/src/Components/MyToastContainer.js":"12","/Users/navyabhatia/Desktop/react-wiki/src/Pages/Login.js":"13","/Users/navyabhatia/Desktop/react-wiki/src/Pages/Register.js":"14"},{"size":229,"mtime":1641711951212,"results":"15","hashOfConfig":"16"},{"size":2823,"mtime":1641747731745,"results":"17","hashOfConfig":"16"},{"size":1932,"mtime":1641727390847,"results":"18","hashOfConfig":"16"},{"size":401,"mtime":1641712441247,"results":"19","hashOfConfig":"16"},{"size":1108,"mtime":1641712522772,"results":"20","hashOfConfig":"16"},{"size":1040,"mtime":1641712564268,"results":"21","hashOfConfig":"16"},{"size":538,"mtime":1641712475848,"results":"22","hashOfConfig":"16"},{"size":535,"mtime":1641712488525,"results":"23","hashOfConfig":"16"},{"size":538,"mtime":1641712460308,"results":"24","hashOfConfig":"16"},{"size":526,"mtime":1641734113643,"results":"25","hashOfConfig":"16"},{"size":2665,"mtime":1641719324689,"results":"26","hashOfConfig":"16"},{"size":399,"mtime":1641747748103,"results":"27","hashOfConfig":"16"},{"size":149,"mtime":1641748254517,"results":"28","hashOfConfig":"16"},{"size":155,"mtime":1641748358689,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"11ovsm5",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/navyabhatia/Desktop/react-wiki/src/index.js",[],["63","64"],"/Users/navyabhatia/Desktop/react-wiki/src/App.js",[],"/Users/navyabhatia/Desktop/react-wiki/src/Components/Cards/Cards.js",["65","66","67"],"import React, { useEffect, useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\n\n\n\n\n\n//const cards vali ststement se detructuring the data we got from fetched data\n//i.e hme yahn data mil gaya ..now we will map data\nconst Cards = ({ results }) => {\n  let display;\n  if (results) {\n    //searched char present in page\n    //x will target each of the result you can write anything there\n    display = results.map((x) => {\n      let { id, name, image, location, status } = x;\n      return (\n        <div key={id} className=\"col-4\">\n          <Card\n            style={{\n              maxWidth: 345,\n              boxShadow: \"0 5px 8px 0 rgba(0, 0, 0, 0.3)\",\n              border: \"2px solid #0b5ed7\",\n              // borderColor: \"#0b5ed7\",\n              //  borderRadius: \"10px\",\n              paddingBottom: \"10px\",\n              marginTop: 20,\n              backgroundColor: \"#fafafa\"\n            }}\n          >\n            <CardMedia\n              style={{\n                height: \"150px\",\n                width: \"150\",\n                borderRadius: \"10px 10px 0 0\"\n\n              }}\n              image={image}\n            />\n            <CardContent>\n              <Typography color=\"primary\" variant=\"h5\">\n                {name}\n              </Typography>\n              <Typography color=\"textSecondary\" variant=\"subtitle2\">\n                {status}\n              </Typography>\n            </CardContent>\n          </Card>\n          <BookmarkIcon \n          style={{\n            color :\"black\"\n            \n          }}\n          />\n        </div>\n      );\n    });\n  } else {\n    //not present\n    display = \"No Characters Found :/\";\n  }\n\n  return <>{display}</>;\n};\n\nexport default Cards;\n","/Users/navyabhatia/Desktop/react-wiki/src/Components/Filter/Filter.js",[],"/Users/navyabhatia/Desktop/react-wiki/src/Components/Pagination/Pagination.js",["68"],"import React from \"react\";\nimport { Button } from \"@mui/material/Button\";\nimport ReactPaginate from \"react-paginate\";\n//import Pagination from \"@material-ui/lab/Pagination\";\n//destructuring it below\nconst Pagination = ({ info, pageNumber, setPageNumber }) => {\n  /* let next = () => {\n    setPageNumber((x) => x + 1); //incementing the value i.e page number by one\n  };\n\n  let prev = () => {\n    if (pageNumber === 1) return;\n    setPageNumber((x) => x - 1);\n  };\n  return (\n    <div className=\"container\">\n      <Button\n        onClick={prev}\n        variant=\"contained\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          border: \"3px solid green\"\n        }}\n      >\n        Prev\n      </Button>\n\n      <Button\n        onClick={next}\n        variant=\"outlined\"\n        style={{ display: \"flex\", justifyContent: \"center\" }}\n      >\n        Next\n      </Button>\n    </div>\n  );\n  */\n  <Pagination count={info?.pages} variant=\"outlined\" shape=\"rounded\" />;\n  return <ReactPaginate pageCount={info?.pages} />;\n};\nexport default Pagination;\n","/Users/navyabhatia/Desktop/react-wiki/src/Components/Search/Search.js",["69"],"import React from \"react\";\nimport styles from \"./Search.css\";\nimport Button from \"@mui/material/Button\";\n\nconst Search = ({ setSearch, setPageNumber }) => {\n  return (\n    <form className=\"design\">\n      <input\n        onChange={(e) => {\n          setPageNumber(1); //WRITTEN THIS AS WE WANTED TO SEARCH HO TOH 1 PAGE MEIN HI RHE OR SEARCH 1 SE HI START KARE YEH NA HO KI  4 page mein search krrhe hai toh 4 se aage ka search kre\n          setSearch(e.target.value); //through onchange capturing the data awe are writing in search and then calls setsearch function for it which updates search varoable and puts in api then search it and so on\n        }}\n        type=\"text\"\n        placeholder=\"Search for characters\"\n        className=\"st\"\n      />\n      <Button\n        className=\"btn\"\n        onClick={(e) => {\n          e.preventDefault(); //this will prevent itself to referesh again jab we press on search button\n        }}\n        variant=\"contained\"\n      >\n        Search\n      </Button>\n    </form>\n  );\n};\nexport default Search;\n","/Users/navyabhatia/Desktop/react-wiki/src/Components/Filter/Category/Species.js",[],"/Users/navyabhatia/Desktop/react-wiki/src/Components/Filter/Category/Status.js",[],"/Users/navyabhatia/Desktop/react-wiki/src/Components/Filter/Category/Gender.js",[],"/Users/navyabhatia/Desktop/react-wiki/src/Pages/SavedCharacters.js",[],"/Users/navyabhatia/Desktop/react-wiki/src/Components/Navbar/Navbar.js",["70","71","72","73","74","75"],"\n\n\nimport { useState } from \"react\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { Container, Typography, Menu, MenuItem, Button } from \"@mui/material\";\n//import MenuIcon from \"@mui/icons-material/Menu\";\n\n//import \"../../App.css\";\n\nconst Navbar = () => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const navigate = useNavigate();\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"isLoggedIn\");\n    console.log(\"logout\");\n    navigate(\"/\", { replace: true });\n  };\n\n  const NavlinkStyle = {\n    textDecoration: \"none\",\n    fontSize: \"1rem\",\n    fontWeight: \"500\",\n    padding: \"5px 8px\",\n  };\n\n  return (\n    <nav\n      style={{\n        width: \"100%\",\n        backgroundColor: \"#D3D3D3\",\n        marginBottom: \"20px\",\n      }}>\n      <Container\n        sx={{\n          height:\"70px\" ,\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}>\n        <NavLink to=\"/\" style={{ textDecoration: \"none\" }}>\n          <Typography variant=\"h3\" component=\"h1\" sx={{ color: \"#000000\" }}>\n          <h1 className=\"text-center ubuntu my-4\">\n          Rick & Morty\n          <span className=\"text-primary\">WiKi</span>\n        </h1>\n          </Typography>\n        </NavLink>\n        {largerWindow()}\n        \n      </Container>\n    </nav>\n  );\n\n  function largerWindow() {\n    return (\n      <div className=\"large\">\n        <ul\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"end\",\n          }}>\n          <li style={{ listStyleType: \"none\" }}>\n            <NavLink to=\"/\" style={{ ...NavlinkStyle, color: \"black\" }}>\n              Home\n            </NavLink>\n          </li>\n          <li style={{ listStyleType: \"none\" }}>\n            <NavLink\n              to=\"/savedcharacters\"\n              style={{ ...NavlinkStyle, color: \"black\" }}>\n              SavedCharacters\n            </NavLink>\n          </li>\n          <li style={{ listStyleType: \"none\" }}>\n            {localStorage.getItem(\"isLoggedIn\") ? (\n              <NavLink\n                to=\"\"\n                style={{ ...NavlinkStyle, color: \"black\" }}\n                onClick={handleLogout}>\n                Logout\n              </NavLink>\n            ) : (\n              <NavLink to=\"/login\" style={{ ...NavlinkStyle, color: \"black\" }}>\n                Login\n              </NavLink>\n            )}\n          </li>\n        </ul>\n      </div>\n    );\n  }\n\n\n};\n\nexport default Navbar;\n","/Users/navyabhatia/Desktop/react-wiki/src/Components/MyToastContainer.js",[],"/Users/navyabhatia/Desktop/react-wiki/src/Pages/Login.js",[],"/Users/navyabhatia/Desktop/react-wiki/src/Pages/Register.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":26},{"ruleId":"80","severity":1,"message":"84","line":1,"column":28,"nodeType":"82","messageId":"83","endLine":1,"endColumn":36},{"ruleId":"80","severity":1,"message":"85","line":20,"column":30,"nodeType":"82","messageId":"83","endLine":20,"endColumn":38},{"ruleId":"80","severity":1,"message":"86","line":2,"column":10,"nodeType":"82","messageId":"83","endLine":2,"endColumn":16},{"ruleId":"80","severity":1,"message":"87","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":14},{"ruleId":"80","severity":1,"message":"88","line":6,"column":33,"nodeType":"82","messageId":"83","endLine":6,"endColumn":37},{"ruleId":"80","severity":1,"message":"89","line":6,"column":39,"nodeType":"82","messageId":"83","endLine":6,"endColumn":47},{"ruleId":"80","severity":1,"message":"86","line":6,"column":49,"nodeType":"82","messageId":"83","endLine":6,"endColumn":55},{"ruleId":"80","severity":1,"message":"90","line":14,"column":9,"nodeType":"82","messageId":"83","endLine":14,"endColumn":13},{"ruleId":"80","severity":1,"message":"91","line":16,"column":9,"nodeType":"82","messageId":"83","endLine":16,"endColumn":20},{"ruleId":"80","severity":1,"message":"92","line":19,"column":9,"nodeType":"82","messageId":"83","endLine":19,"endColumn":20},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'location' is assigned a value but never used.","'Button' is defined but never used.","'styles' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'open' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]